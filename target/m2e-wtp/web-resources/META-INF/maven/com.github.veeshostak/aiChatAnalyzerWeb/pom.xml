<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.veeshostak</groupId>
  <artifactId>aiChatAnalyzerWeb</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>aiChatAnalyzerWeb Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
   <properties>
   	<!-- tell Maven the compiler version to use. 1.8 == Java 8 -->
    <!-- target: generates class files that will work on a given Java version
    		 source: the Java version of source code accepted -->
    <maven.compiler.target>1.8</maven.compiler.target> 
    <maven.compoler.source>1.8</maven.compoler.source>
   
  	<springframework.version>4.3.4.RELEASE</springframework.version>
  </properties>
  
  
  <dependencies>
  	<!-- Java Unit Testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

	<!-- Servlet+JSP+JSTL. Java Server Pages, JavaServer Pages 
	Standard Tag Library, and Java servlet to extend the capabilities of a server -->
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
    </dependency>

    <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>javax.servlet.jsp-api</artifactId>
        <version>2.3.1</version>
    </dependency>

    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.2</version>
    </dependency>
	
	<!-- Hibernate -->
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-core</artifactId>
	    <version>5.2.12.Final</version>
	</dependency>
	
	<!-- Add C3PO Connection Pooling in Hibernate.Connection 
	pooling is an operation in which a system pre-initializes the 
	connections to be used in the future. This is done since creating 
	connections at the time of use is an expensive operation. -->
	<dependency>
	    <groupId>com.mchange</groupId>
	    <artifactId>c3p0</artifactId>
	    <version>0.9.5.2</version>
    </dependency>
	
	<!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${springframework.version}</version>
        </dependency>

		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		    <version>42.1.4</version>
		</dependency>
    
  </dependencies>
  
  <!-- Get repositories outside of Maven Central Remote Repo -->
  <repositories> </repositories>
  
  <build>
    <finalName>aiChatAnalyzerWeb</finalName>
    <plugins>

      <!-- The Compiler Plugin is used to compile the sources of your project. -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      
      <!-- Builds a Web Application Archive (WAR) file from the project output and its dependencies. -->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

    </plugins>
  </build>
  
</project>
